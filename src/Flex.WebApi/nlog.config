<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      internalLogToConsole="false">
	<extensions>
		<add assembly="NLog.Targets.ElasticSearch"/>
    <add assembly="Nlog.RabbitMQ.Target" />
	</extensions>
	<targets>
		<!--添加一个新条目让日志输出到控制台中，并添加必要的输出布局（layout）-->
		<target name="console" xsi:type="Console" layout="${longdate}|${level}|${message}"/>
		<!--说明 xsi:type="Console"指定输出到控制台；layout指定输出文件内容的样式 ${longdate}是日期（具体到毫秒），${level}是日志的等级；${message}是具体要输出的内容。-->
	</targets>
  <targets>
    <target xsi:type="File"
            name="info"
            fileName="${basedir}/log/info/${date:format=yyyy-MM-dd-HH}.log"
            layout ="${longdate}|${logger}|${uppercase:${level}}|${message} ${exception}" encoding="utf-8"/>
    <target xsi:type="File"
            name="warning"
            fileName="${basedir}/log/warning/${date:format=yyyy-MM-dd-HH}.log"
            layout ="${longdate}|${logger}|${uppercase:${level}}|${message} ${exception}" encoding="utf-8"/>
    <target xsi:type="File"
            name="debug"
            fileName="${basedir}/log/debug/${date:format=yyyy-MM-dd-HH}.log"
            layout ="${longdate}|${logger}|${uppercase:${level}}|${message} ${exception}" encoding="utf-8"/>
    <target xsi:type="File"
           name="error"
           fileName="${basedir}/log/error/${date:format=yyyy-MM-dd-HH}.log"
           layout ="${longdate}|${logger}|${uppercase:${level}}|${message} ${exception}" encoding="utf-8"/>
  </targets>
	<targets async="true">
		<!--ElasticSearch保存日志信息-->
		<target name="ElasticSearch" xsi:type="ElasticSearch" uri="http://192.168.20.128:9200"
				index="admin_web_api-${date:format=yyyy.MM.dd}" documentType="doc" includeAllProperties="true"
					 layout="[${date:format=yyyy-MM-dd HH\:mm\:ss}][${level}] ${logger} ${message} ${exception:format=toString}">
			<field name="MachineName" layout="${machinename}" />
			<field name="Time" layout="${longdate}" />
			<field name="level" layout="${level:uppercase=true}" />
			<field name="logger" layout=" ${logger}" />
			<field name="message" layout=" ${message}" />
			<field name="exception" layout=" ${exception:format=toString}" />
			<field name="processid" layout=" ${processid}" />
			<field name="threadname" layout=" ${threadname}" />
			<field name="stacktrace" layout=" ${stacktrace}" />
			<field name="Properties" layout="${machinename} ${longdate} ${level:uppercase=true} ${logger} ${message} ${exception}|${processid}|${stacktrace}|${threadname}" />
		</target>
	</targets>
  <targets>
    <!-- when http://nlog.codeplex.com/workitem/6491 is fixed, then xsi:type="haf:RabbitMQ" instead;
             these are the defaults (except 'topic' and 'appid'): 
        -->
    <default-wrapper xsi:type="AsyncWrapper"></default-wrapper>
    <target name="RabbitMQTarget"
            xsi:type="RabbitMQ"
            username="admin"
            password="football"
            hostname="192.168.20.128"
            port="13572"
            exchange="testService"
            exchangeType="topic"
            topic="testServiceKey"
            vhost="/"
            durable="true"
            layout="[${date:format=yyyy-MM-dd HH\:mm\:ss}][${level}] ${logger} ${message} ${exception:format=toString}"
            UseLayoutAsMessage="true"/>
  </targets>
	<rules>
		<!--<logger name="*" minlevel="INFO" writeTo="ElasticSearch" />-->
		<!--<logger name="*" minlevel="Warning" writeTo="console" />-->
		<logger name="*" level="INFO" writeTo="info" />
		<logger name="*" level="Debug" writeTo="debug" />
		<logger name="*" level="Warning" writeTo="warning" />
		<logger name="*" minlevel="Error" writeTo="error" />
    <!--<logger name="*" level="Info,Error" writeTo="RabbitMQTarget"/>-->
	</rules>
</nlog>
